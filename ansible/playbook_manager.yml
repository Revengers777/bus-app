# playbook_manager.yml
- name: Configuración Específica del Nodo Manager
  hosts: all  # Aunque ponga all, al no existir inventario es localhost
  become: yes
  vars:
    swarm_join_file: /vagrant/unir_swarm.txt  # Define la ruta para el archivo del comando de join
    manager_ip: 192.168.33.10  # Define explícitamente la IP del manager aquí
    repo_url: https://github.com/Revengers777/bus-app.git  # El repositorio de GitHub
    repo_dest: /vagrant/bus-app  # el volcado del git
    app_build_dir: "{{ repo_dest }}/bus-ticket-app/"  # Directorio para build/deploy
  tasks:
    # Clonar o actualizar el repositorio de la aplicación
    - name: Clonar o actualizar el repositorio de la aplicación
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        version: main  # o la rama/tag que necesites, 'main' es común ahora
        clone: yes
        update: yes  # Intenta hacer 'git pull' si el repo ya existe

    # Construcción de imágenes usando Docker Compose
    - name: Construir imágenes de la aplicación con docker compose
      ansible.builtin.command:
        cmd: docker-compose -f /vagrant/bus-app/bus-ticket-app/docker-compose.yml build
        chdir: "{{ app_build_dir }}"  # Usa la variable para el directorio correcto
      environment:
        COMPOSE_PROJECT_NAME: busapp  # Opcional: establece un nombre de proyecto
      register: compose_build_result
      changed_when: "'Successfully built' in compose_build_result.stdout"

    # Inicializar Docker Swarm
    - name: Inicializar Docker Swarm
      ansible.builtin.command:
        cmd: "docker swarm init --advertise-addr {{ manager_ip }}"
      register: swarm_init_result
      failed_when: "'Error response from daemon' in swarm_init_result.stderr and 'This node is already part of a swarm' not in swarm_init_result.stderr"
      changed_when: "'Swarm initialized' in swarm_init_result.stdout"

    # Extraer la línea de comando exacta para unirse (esto es lo que va en el archivo unir_swarm.txt)
    - name: Extraer el comando de unión al Swarm
      ansible.builtin.shell:
        cmd: >
          docker swarm join-token worker -q
      register: swarm_join_command
      changed_when: false  # No queremos que esto se marque como "cambiado"

    # Guardar el comando de unión en un archivo para que el worker se una al swarm
    - name: Guardar el comando de unión en un archivo
      ansible.builtin.copy:
        content: "docker swarm join --token {{ swarm_join_command.stdout }} {{ manager_ip }}:2377"
        dest: "{{ swarm_join_file }}"
      when: swarm_init_result.changed  # Solo guarda el archivo si el Swarm fue inicializado correctamente

    # Desplegar la aplicación con Docker Compose (usando el archivo docker-compose.yml)
    - name: Desplegar la aplicación con Docker Compose
      ansible.builtin.command:
        cmd: docker-compose -f /vagrant/bus-app/bus-ticket-app/docker-compose.yml up -d
        chdir: "{{ app_build_dir }}"  # Usa la variable para el directorio correcto
      register: compose_deploy_result
      changed_when: "'Creating' in compose_deploy_result.stdout or 'Starting' in compose_deploy_result.stdout"
      when: swarm_init_result.changed  # Solo despliega si el Swarm se inicializó correctamente
